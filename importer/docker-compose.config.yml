version: '3.9'

services:
  # container for executing config import scripts for setting up initial config
  disi-openhim-config-importer:
    image: jembi/instantohie-config-importer
    deploy:
      restart_policy:
        condition: none
    environment:
      OPENHIM_API_HOSTNAME: 'openhim-core'
      OPENHIM_API_PORT: 8080
      OPENHIM_API_USERNAME: 'root@openhim.org'
      OPENHIM_API_PASSWORD: 'instant101'
      # Reject unauthorised is only needed if the OpenHIM's SSL is not setup
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    configs:
      - source: disi-openhim-config-openhimConfig.js
        target: /openhimConfig.js
      - source: disi-openhim-config-openhim-import.json
        target: /openhim-import.json
    # This command will only attempt to import the OpenHIM config when the heartbeat responds with a 2xx
    command: sh -c "wait-on -t 60000 https-get://openhim-core:8080/heartbeat && node /openhimConfig.js"

  disi-kibana-config-importer:
    image: curlimages/curl:7.77.0
    deploy:
      restart_policy:
        condition: none
    configs:
      - source: disi-kibana-config-kibana-export.ndjson
        target: /kibana-export.ndjson
    command:
      [
        'sh',
        '-c',
        "until nc -vz dashboard-visualiser-kibana 5601; do echo Kibana not running yet; sleep 1; done; curl dashboard-visualiser-kibana:5601/api/saved_objects/_import?overwrite=true -u elastic:${ES_ELASTIC-dev_password_only} -H 'kbn-xsrf: true' --form file=@/kibana-export.ndjson"
      ]

  disi-es-index-importer:
    image: curlimages/curl:7.77.0
    deploy:
      restart_policy:
        condition: none
    configs:
      - source: disi-es-index-config-fhir-report-patient.json
        target: /fhir-report-patient.json
    command:
      [
        'sh',
        '-c',
        "until nc -vz analytics-datastore-elastic-search 9200; do echo ES not running yet; sleep 1; done; curl -XPUT --fail-with-body 'http://analytics-datastore-elastic-search:9200/fhir-report-patient' -u elastic:${ES_ELASTIC-dev_password_only} -H 'Content-Type: application/json' -d@/fhir-report-patient.json"
      ]

  hapi-fhir-config-importer:
    image: node:erbium-alpine
    environment:
      HAPI_FHIR_BASE_URL: http://hapi-fhir:8080/fhir
      FHIR_IG_URL: ${FHIR_IG_URL}
      NODE_ENV: 'production'
    configs: 
      - source: disi-hapi-fhir-fhirConfig.js
        target: /fhirConfig.js
    command: sh -c "cd / && npm i axios@v1.1.3 adm-zip && npm i wait-on -g && wait-on -t 600000 http-get://hapi-fhir:8080 && node /fhirConfig.js" 

  sante-mpi-config-importer:
    image: jembi/instantohie-config-importer
    deploy:
      restart_policy:
        condition: none
    environment:
      CLIENT_REGISTRY_HOST: ${CLIENT_REGISTRY_HOST}
      CLIENT_REGISTRY_PORT: ${CLIENT_REGISTRY_PORT}
      CLIENT_REGISTRY_IDENTITY_DOMAIN: ${CLIENT_REGISTRY_IDENTITY_DOMAIN}
    configs:
      - source: disi-santempi-config-santeMatchingConfig.json
        target: /santeMatchingConfig.json
      - source: disi-santempi-config-santeMpiConfig.js
        target: /santeMpiConfig.js
      - source: disi-santempi-config-identityDomains.json
        target: /identityDomains.json
    command: sh -c "wait-on -t 60000 http-get://santedb-mpi:8080/api-docs/index.html && node /santeMpiConfig.js && echo 'success';"

  message-bus-kafka-config-importer:
    image: jembi/instantohie-config-importer
    deploy:
      restart_policy:
        condition: none
    environment:
      KAFDROP_HOST: ${KAFDROP_HOST}
      KAFDROP_PORT: ${KAFDROP_PORT}
    command: sh -c "wait-on -t 60000 http-get://kafdrop:9013/topic && ls && pwd && node /kafka.js && echo 'success';"
    configs:
      - source: disi-kafka-kafka.js
        target: /kafka.js

  disi-jsreport-config-importer:
    # TODO: Update image to use published version of jembi/config-importer
    image: jembi/api-config-importer:latest
    environment:
      SERVICE_NAME: 'dashboard-visualiser-jsreport'
      SERVICE_API_PORT: 5488
      API_USERNAME: ${JS_REPORT_USERNAME}
      API_PASSWORD: ${JS_REPORT}
      SSL: ${JS_REPORT_SSL}
      API_PATH: '/api/import'
      MIME_TYPE: 'multipart/form-data'
      CONFIG_FILE: ${JS_REPORT_CONFIG_FILE}
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    configs:
      - source: disi-jsreport-import.zip
        target: /export.jsrexport

configs:
  disi-openhim-config-openhimConfig.js:
    file: ./openhim/openhimConfig.js
    name: disi-openhim-config-openhimConfig.js-${disi_openhim_config_openhimConfig_js_DIGEST:?err}
    labels:
      name: disi
  disi-openhim-config-openhim-import.json:
    file: ./openhim/openhim-import.json
    name: disi-openhim-config-openhim-import.json-${disi_openhim_config_openhim_import_json_DIGEST:?err}
    labels:
      name: disi
  disi-kibana-config-kibana-export.ndjson:
    file: ./kibana/kibana-export.ndjson
    name: disi-kibana-config-kibana-export.ndjson-${disi_kibana_config_kibana_export_ndjson_DIGEST:?err}
    labels:
      name: disi
  disi-es-index-config-fhir-report-patient.json:
    file: ./indexes/fhir-report-patient.json
    name: disi-es-index-config-fhir-report-patient.json-${disi_es_index_config_fhir_report_patient_json_DIGEST:?err}
    labels:
      name: disi
  disi-santempi-config-santeMatchingConfig.json:
    file: ./santempi/santeMatchingConfig.json
    name: disi-santempi-config-santeMatchingConfig.json-${disi_santempi_config_santeMatchingConfig_json_DIGEST:?err}
    labels:
      name: disi
  disi-santempi-config-santeMpiConfig.js:
    file: ./santempi/santeMpiConfig.js
    name: disi-santempi-config-santeMpiConfig.js-${disi_santempi_config_santeMpiConfig_js_DIGEST:?err}
    labels:
      name: disi
  disi-santempi-config-identityDomains.json:
    file: ./santempi/identityDomains.json
    name: disi-santempi-config-identityDomains.json-${disi_santempi_config_identityDomains_json_DIGEST:?err}
    labels:
      name: disi
  disi-kafka-kafka.js:
    file: ./kafka/kafka.js
    name: disi-kafka-kafka.js-${disi_kafka_kafka_js_DIGEST:?err}
    labels:
      name: disi
  disi-jsreport-import.zip:
    file: ./jsreport/export.jsrexport
    name: disi-jsreport-import.zip-${disi_jsreport_import_zip_DIGEST:?err}
    labels:
      name: disi
  disi-hapi-fhir-fhirConfig.js:
    file: ./hapi-fhir/fhirConfig.js
    name: disi-hapi-fhir-fhirConfig.js-${disi_hapi_fhir_fhirConfig_js_DIGEST:?err}
    labels:
      name: disi
